[mypy]
# Logistics of what code to check and how to handle the data.
# scripts_are_modules = True
show_traceback = True

# Options to make the checking stricter.
warn_no_return = True

follow_imports = normal
follow_imports_for_stubs = True

# Needed because of bug in MyPy

#################################################
# STRICTNESS (--strict flag)
#################################################

# ------------------------------
# IMPORT DISCOVERY
# ------------------------------
# Suppresses error messages about imports that cannot be resolved
ignore_missing_imports = True

# ------------------------------
# DISALLOW DYNAMIC TYPING
# ------------------------------
# Disallows usage of generic types that do not specify explicit type parameters
disallow_any_generics = True
# Disallows subclassing a value of type Any
disallow_subclassing_any = True

# ------------------------------
# UNTYPED DEFINITIONS AND CALLS
# ------------------------------
# Disallows calling functions without type annotations from functions with type
# annotations
disallow_untyped_calls = True
# Disallows defining functions without type annotations or with incomplete type annotations
disallow_untyped_defs = True
# Disallows defining functions with incomplete type annotations
disallow_incomplete_defs = True
# Type-checks the interior of functions without type annotations
check_untyped_defs = True
# Reports an error whenever a function with type annotations is decorated with
# a decorator without annotations
disallow_untyped_decorators = True

# ------------------------------
# NONE AND OPTIONAL HANDLING
# ------------------------------
# Changes the treatment of arguments with a default value of None by not
# implicitly making their type Optional
no_implicit_optional = True
# Enables or disables strict Optional checks. If False, mypy treats None as
# compatible with every type
strict_optional = True

# ------------------------------
# CONFIGURING WARNINGS
# ------------------------------
# Warns about unneeded # type: ignore comments
warn_unused_ignores = True
# Shows a warning when returning a value with type Any from a function declared
# with a non- Any return type
warn_return_any = True

# ------------------------------
# MISCELLANEOUS
# ------------------------------
# Warns about casting an expression to its inferred type
warn_redundant_casts = True
# Warns about per-module sections in the config file that do not match any
# files processed when invoking mypy.
warn_unused_configs = True


# ------------------------------
# MISCELLANEOUS
# ------------------------------
# Makes script `x` become module x instead of `__main__`. This is useful when
# checking multiple scripts in a single run
scripts_are_modules = True
# # Controls how much debug output will be generated. Higher numbers are more
# # verbose
# verbosity = 0


# [mypy-*]
# disallow_untyped_calls = True
# disallow_untyped_defs = True
# check_untyped_defs = True
# warn_return_any = True
# no_implicit_optional = True
# strict_optional = True
